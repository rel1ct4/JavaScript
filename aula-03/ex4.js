/**## üîπ Exerc√≠cio 4 - Calculadora Simples 1
**Descri√ß√£o:** Escreva um programa que simule uma calculadora simples. O programa deve ler dois n√∫meros inteiros e o tipo de opera√ß√£o a ser realizada (soma, subtra√ß√£o, multiplica√ß√£o ou divis√£o). A opera√ß√£o ser√° escolhida pelo usu√°rio, utilizando um n√∫mero que representar√° cada opera√ß√£o:

- **1** para soma
- **2** para subtra√ß√£o
- **3** para multiplica√ß√£o
- **4** para divis√£o

Use o comando `switch` para escolher a opera√ß√£o e, ao final, exiba o resultado da opera√ß√£o escolhida.

**Exemplo de:**
- Entrada:
    ```css
    Digite o primeiro n√∫mero: 10
    Digite o segundo n√∫mero: 5

    --- Opera√ß√µes ---
    1 - soma 
    2 - subtra√ß√£o 
    3 - multiplica√ß√£o
    4 - divis√£o
    -----------------

    Escolha uma opera√ß√£o: 1
    ```

- Sa√≠da:
    ```yaml
    Resultado da soma: 15
    ```

--- */

let primeiro, segundo, opcao, operacao

primeiro = Number(prompt(`Digite seu primeiro n√∫mero!`))
segundo = Number(prompt(`Digite seu egundo n√∫mero!`))

alert(`--- Opera√ß√µes ---
    1 - soma 
    2 - subtra√ß√£o 
    3 - multiplica√ß√£o
    4 - divis√£o
    -----------------
`)

opcao = Number(prompt(`Escolha sua op√ß√£o!`))

switch (opcao) {
    case 1:
        alert(`Resultado da soma: ${primeiro + segundo}`)
        break;

    case 2:
        alert(`Resultado da subtra√ß√£o: ${primerio - segundo}`)
        break;

    case 3:
        alert(`Resultado da multiplica√ß√£o: ${primerio * segundo}`)
        break;

    case 4:
        alert(`Resultado da divis√£o: ${primeiro / segundo}`)
        break;
}

